name: Auto Release on Push

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.github/workflows/pages.yml'
      - '.github/workflows/publish.yml'
      - '.github/workflows/build-bindings.yml'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep -m1 '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Extract changelog for current version
        id: changelog
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          
          # Extract changelog section for current version
          if [ -f "CHANGELOG.md" ]; then
            # Try to find version section in CHANGELOG
            CHANGELOG_CONTENT=$(awk "/^## \[?$VERSION\]?|^## \[?v?$VERSION\]?/{flag=1; next} /^## /{flag=0} flag" CHANGELOG.md)
            
            # If no specific version found, get the latest section
            if [ -z "$CHANGELOG_CONTENT" ]; then
              CHANGELOG_CONTENT=$(awk '/^## /{if(++count==1){flag=1; next} else {flag=0}} flag' CHANGELOG.md)
            fi
            
            # If still empty, use a default message
            if [ -z "$CHANGELOG_CONTENT" ]; then
              cat > changelog_body.md << EOF
          ## Changes in v$VERSION
          
          Automatic release from main branch.
          
          See [CHANGELOG.md](CHANGELOG.md) for full details.
          EOF
            else
              echo "$CHANGELOG_CONTENT" > changelog_body.md
            fi
          else
            cat > changelog_body.md << EOF
          ## Release v$VERSION
          
          Automatic release from main branch.
          
          ### Commit
          - $(git log -1 --pretty=format:'%s')
          EOF
          fi
          
          echo "Changelog extracted successfully"

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG="${{ steps.get_version.outputs.tag }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG exists, will be replaced"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG does not exist, will be created"
          fi

      - name: Delete existing tag and release
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          TAG="${{ steps.get_version.outputs.tag }}"
          
          # Delete remote tag
          git push origin :refs/tags/$TAG || true
          
          # Delete local tag
          git tag -d $TAG || true
          
          # Delete GitHub release if it exists
          gh release delete $TAG --yes || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new tag
        run: |
          TAG="${{ steps.get_version.outputs.tag }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a $TAG -m "Release $TAG"
          git push origin $TAG

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          name: ${{ steps.get_version.outputs.tag }}
          body_path: changelog_body.md
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for release to be created
        run: sleep 5

      - name: Trigger Build Bindings Workflow
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"release-created","client_payload":{"tag":"${{ steps.get_version.outputs.tag }}","ref":"${{ github.ref_name }}"}}'
